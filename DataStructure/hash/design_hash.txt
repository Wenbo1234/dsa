设计哈希表

哈希表的原理是什么？
哪些因素会影响哈希函数以及冲突解决策略的选择？
了解哈希集合与哈希映射之间的区别。
如何设计如典型的标准模板库中那样的哈希集合和哈希映射的简化版本。
插入和查找操作的复杂度是什么？


哈希表的原理

哈希表的关键思想是使用哈希函数将键映射到存储桶。

确切的说，
1. 当我们插入一个新的键时，哈希函数将决定该键应该分配到哪个桶中，并将该键存储在相应的桶中；
2. 当我们想要搜索一个键时，哈希表将使用相同的哈希函数来查找对应的桶，并只在特定的桶中进行搜索。



设计哈希表的关键

在设计哈希表时，你应该注意两个基本因素。

1. 哈希函数
哈希函数的设计是一个开放的问题。其思想是尽可能将键分配到桶中，理想情况下，完美的哈希函数将是键和桶之间的一对一映射。然而，在大多数情况下，哈希函数并不完美，它需要在桶的数量和桶的容量之间进行权衡。


2. 冲突解决

理想情况下，如果我们的哈希函数是完美的一对一映射，我们将不需要处理冲突。不幸的是，在大多数情况下，冲突几乎是不可避免的。例如，在我们之前的哈希函数（y  =  x ％ 5）中，1987 和 2 都分配给了桶 2，这是一个冲突。

冲突解决算法应该解决以下几个问题：

如何组织在同一个桶中的值？
如果为同一个桶分配了太多的值，该怎么办？
如何在特定的桶中搜索目标值？

